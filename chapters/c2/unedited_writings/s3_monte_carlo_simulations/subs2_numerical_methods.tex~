\subsubsection{Numerical Methods}

The techniques for solving initial-boundary value problems (IBVPs)
based on numerical approximations have existed for a long
time. Recently, the considerable developments have been taken place in
the numerical analysis and constructing the efficient computer
programs to get the numerical solutions. 


The finite-difference methods (FDM) are frequently used and easily
implemented in solving the heat equation by converting it into a
system of algebraically solvable equations
\cite{grossmann2007numerical}. The basic idea is to replace the
derivatives in the equations by difference quotients. For example, the
FTCS (Forward Time Centered Space) scheme
\cite{pletcher2012computational} aims to discretize the Laplace
operator in space and the time derivative and implement the boundary
conditions on the staggered grid to represent the original continuous
problem, but it is conditionally stable
\cite{pletcher2012computational}. As the condition stats, a doubling
of the spatial resolution requires a simultaneous reduction in the
time-step by a factor of four in order to maintain the numerical
stability, but it causes the extremly tiny time-step in the high
resolution calculations. There are three kinds of errors needed to be
considered in using FDM. First of all, in the derivation of the
finite-difference equation, the higher-order terms in the Taylor
series are neglected, which constitue a truncation error. If the time
and space interval tends to $0$, the truncation error will approchs
$0$, or the FDM is incompatible or inconsistent with the heat equation
\cite{crank1979mathematics}. Another class of error appearing in FDM
called round-off error, which results from the loss of precision due
to the computer rounding of decimal quantities.
\cite{hoffman2018numerical}. The last class of error is the discritazation
error, the difference between the exact solutions of the original heat
equation and that of the approximating difference equation, which can
be reduced by decreasing the time size, grid size, or both
\cite{crank1979mathematics}. 


Unlike the FDM, the finite element method
(FEM) \cite{zlamal1968finite} divides the complicated geometries,
irregular shapes, and boundaries into the union of smaller and simpler
subdomains (eg. lattice, triangle, curvilinear polygons, etc.), which
are called finite elements \cite{logan2011first}. The smaller size of
the finite element mesh, the more accurate the approximate
solution. Therefore, FEM has great flexibilites or
adaptivities \cite{reddy1993introduction}. For example, FEM can
provide higher fidelity or higher accuracy in a local region and keep
elsewhere the same. Each subdomain is locally represented by the
element equation, continuous piecewise shape functions, which are
finally assembled into a larger system of algebraic equations for
modelling the entire problem. FEM aims to approximate the numerical
solution by minimizing the associated error function to meet certain
specification of the accuracy, which can be done by the
parallelization. Nevertheless, FEM heavily relies on the numerical
integration, where the quadrature rules sometimes cause
difficulties. FEM requires an amount of human involvement in the
process of building the FE model, checking the result, detecting and
updating the model design. Moreover, compared with FDM, FEM demands a
longer execution time and a larger amount of input data.


In contrast, the finite volume method (FVM) converts the
$2$-dimensional diffusion equations into a linear equations system,
which can be solved by the direct method
\cite{eymard2000finite}. However, the accuracy of FVM is related to
the integration with respect to time and space. Unlike the domain-type
methods (e.g. FDM, FEM, FVM, etc.), the boundary element method (BEM)
is an alternative numerical computational technique for solving PDEs
formulated as an integral equation based on the boundary. Especially,
when the domain extends to infinity or the boundary is complex, BEM is
more efficient in computation than other methods because of the
smaller surface or volume ratio \cite{katsikadelis2002boundary} since
it only discretizes the boundary and fits the boundary values into the
integral equation \cite{ang2007beginner}.


For instance, in this thesis, the heat
equation defined in $2$-dimensional root images with millions of
pixels, the extremely complex root systems and various boundary
conditions, which makes it time-consuming and challenging to trace and
identify the problems' geometries, 



All of the mentioned numerical methods have an intrinsically similar
feature - mesh discretization in the time and space dimension. As
described in the subsection~\ref{} The purpose of

the domain of $2$-dimensional heat equation is the medium between the boundary of  


in the image, a
rectangular domain, with millions of pixels, the extremely complex
boundary of root systems, and various boundary conditions. As similar
as described in the subsection~\ref{}, the heat content contained in the 

In
practice, it will be time-consuming and challenging to trace and
identify the boundary of roots, label the nodes, and generate the
coordinates and connectivities among the nodes in the preprocessing
stage of FEM for solving heat equation. 


They need to deal with the problem in defining the
extremely complicated boundary of the root systems. If the mesh
becomes finer and the internal points number becomes larger, the
solutions of the discretized problem will converge to the original
IBVPs with a higher level of accuracy, but the computational time will
be longer. Furthermore, after applying the numerical methods, it will
sometimes take a much longer time to decide whether the solution is
right and adjust the schemes by understanding the systems
qualitatively. More importantly, the extra efforts are demanded based
on the approximated solutions of heat equations since the aimed
numerical approximation is the survival function.





